class Solution {
    public void sum(int index, int target, int [] candi, List<Integer> ds, List<List<Integer>> ans){
        if(index == candi.length){
            if(target == 0)
                ans.add(new ArrayList<>(ds));
            return;
        }
        if(candi[index] <= target){
            ds.add(candi[index]);
            sum(index, target-candi[index], candi, ds, ans);
            ds.remove(ds.size() - 1);
        }
        sum(index+1, target, candi, ds, ans);
    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        sum(0, target, candidates, new ArrayList<>(), ans);
        return ans;
    }
}
